import os.path

from esm_catalog_utils import case_metadata_to_esm_datastore, caseroot_to_case_metadata


def directory_to_esm_datastore(dir, case=None, **kwargs):
    """
    return esm_datastore object for files in dir and subdirectories of dir

    case is the name of the case that generated the files in dir.
    If case is None, case is assumed to be the basename of dir.

    **kwargs: Additional keyword arguments passed to case_metadata_to_esm_datastore
    """

    if case is None:
        case = os.path.basename(dir)
    case_metadata = {"case": case, "output_dirs": [dir]}
    return case_metadata_to_esm_datastore(case_metadata, **kwargs)


def caseroot_to_esm_datastore(caseroot, **kwargs):
    """
    return esm_datastore object for files generated by case with provided caseroot

    **kwargs: Additional keyword arguments passed to case_metadata_to_esm_datastore
    """

    case_metadata = caseroot_to_case_metadata(caseroot)
    return case_metadata_to_esm_datastore(case_metadata, **kwargs)
